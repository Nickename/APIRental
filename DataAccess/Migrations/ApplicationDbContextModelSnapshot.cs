// <auto-generated />
using System;
using DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccess.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarId"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("VehicleCategoryId")
                        .HasColumnType("int");

                    b.HasKey("CarId");

                    b.HasIndex("VehicleCategoryId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            CarId = 1,
                            Brand = "Kia",
                            Description = "Car description",
                            ImgUrl = "https://assets-clean.local-car-finder.com/images/15316/15316_st1280_089.png",
                            Model = "Sorento",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 1
                        },
                        new
                        {
                            CarId = 7,
                            Brand = "Toyota",
                            Description = "Car description",
                            ImgUrl = "https://cdni.autocarindia.com/utils/imageresizer.ashx?n=https://cms.haymarketindia.net/model/uploads/modelimages/Toyota-Fortuner-110120211829.jpg",
                            Model = "Fortuner",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 1
                        },
                        new
                        {
                            CarId = 8,
                            Brand = "Audi",
                            Description = "Car description",
                            ImgUrl = "https://inventory.dealersocket.com/api/photo/ZAltwpW4/1024x0/1675973999/u/ecl/RU1k/dCe4/c1eG/6Z1Q/1kKv/cQ.jpg",
                            Model = "Q3 Quattro",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 1
                        },
                        new
                        {
                            CarId = 9,
                            Brand = "Hummer",
                            Description = "Car description",
                            ImgUrl = "https://stimg.cardekho.com/images/carexteriorimages/930x620/Hummer/Hummer-H2/321/1561092676445/front-left-side-47.jpg",
                            Model = "H2",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 1
                        },
                        new
                        {
                            CarId = 10,
                            Brand = "Porsche",
                            Description = "Car description",
                            ImgUrl = "https://imgd.aeplcdn.com/1280x720/cw/ec/32951/Porsche-Cayenne-Exterior-138359.jpg?wm=0&q=75",
                            Model = "Cayenne",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 1
                        },
                        new
                        {
                            CarId = 2,
                            Brand = "Kia",
                            Description = "Car description",
                            ImgUrl = "https://www.motortrend.com/uploads/izmo/kia/cadenza/2020/cadenza.png",
                            Model = "Cadenza",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 2
                        },
                        new
                        {
                            CarId = 3,
                            Brand = "Toyota",
                            Description = "Car description",
                            ImgUrl = "https://imgd.aeplcdn.com/1200x900/n/cw/ec/110233/2022-camry-exterior-right-front-three-quarter.jpeg?isig=0&q=75",
                            Model = "Camry",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 2
                        },
                        new
                        {
                            CarId = 11,
                            Brand = "Honda",
                            Description = "Car description",
                            ImgUrl = "https://imgd.aeplcdn.com/0x0/cw/ec/21613/Honda-Accord-Right-Front-Three-Quarter-82683.jpg?v=201711021421",
                            Model = "Accord",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 2
                        },
                        new
                        {
                            CarId = 12,
                            Brand = "Mercedes-Benz",
                            Description = "Car description",
                            ImgUrl = "https://www.mercedes-benz.se/passengercars/mercedes-benz-cars/s-class/range-overview/_jcr_content/swipeableteaserbox/par/swipeableteaser/asset.MQ6.12.20210602153015.jpeg",
                            Model = "S-Class",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 2
                        },
                        new
                        {
                            CarId = 13,
                            Brand = "BMW",
                            Description = "Car description",
                            ImgUrl = "https://www.bmw.in/content/dam/bmw/marketIN/bmw_in/all-models/5-series/2020/Interior-andexterior/530d-M-Sport-Front-Quarter.jpg.asset.1623071674609.jpg",
                            Model = "5-Series",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 2
                        },
                        new
                        {
                            CarId = 4,
                            Brand = "Kia",
                            Description = "Car description",
                            ImgUrl = "https://m.atcdn.co.uk/vms/media/e3821c59c01441719e67442360718ecf.jpg",
                            Model = "Stinger",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 3
                        },
                        new
                        {
                            CarId = 14,
                            Brand = "Porsche",
                            Description = "Car description",
                            ImgUrl = "https://tdrresearch.azureedge.net/photos/chrome/Expanded/White/2021PRC010103/2021PRC01010301.jpg",
                            Model = "911",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 3
                        },
                        new
                        {
                            CarId = 15,
                            Brand = "Chevrolet",
                            Description = "Car description",
                            ImgUrl = "https://www.chevrolet.com.mx/content/dam/chevrolet/na/mx/es/index/performance/2023-corvette-stingray/colorizer/jellys/black.jpg?imwidth=960",
                            Model = "Corvette",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 3
                        },
                        new
                        {
                            CarId = 16,
                            Brand = "Audi",
                            Description = "Car description",
                            ImgUrl = "https://mediaservice.audi.com/media/fast/H4sIAAAAAAAAAFvzloG1tIiBOTrayfuvpGh6-m1zJgaGigIGBgZGoDhTtNOaz-I_2DhCHkCFmZQZWMpTkwoYgSrcmLgycxPTU_VBArz____nZ-QustBNrSjRzUvNzWcHKhHkiZsfe9Uw6_id7Q-9vswPcnnBfueZOAOP5I12FrNLew-2znNlmMC35scXWVYfBh4zex33VgEGr7gsDulu9xl7Hy6oZWbg4TW-PefHP5aZep8faqne937GscFNm4GnVCPogbFQwfYPGpHX08-uzWD6YTeLgefYQuU3z-9lz7BZlM9wmm_Jvw_P_gLNPWW3dm-h6SrFcv1NL7ZpNVZ2lnyZDRR1mn31tOCp33K3n23XmLfm_gmWKCEGnh-taY8Y_cOTDgioMH91rql2WjYtl4GnXUGyQu7CH6-ENxdffdr5nrln8ROgGx7dWV_Cxbpjq0tetNre7_7Ol-WehzHwHLW7m2XMH80we60ZQ9XfLrM-kRdTGXj2Vij-ZomzELj55MTlzr8nZdOvWwgy8Bhlq3z6UJ0htC89XDRI4dsuj_feTgw8c45a_p6440W6hirHZ52PJu8rE5awMPAwPNDLqtdewTRZz-jLdqVll3aHLH_OwNN51f1lSnDMTB5pniyPd5PnxTAtPcfACowept1AgiUOSPA8ARIcNgxgEhRxG4AE40IQn7WemYGB24GBgS2EAQT4hEuLcgoSixJz9YpSiwvy84ozy1IFNQyIBMKsPo6RrkEAFfedMlYCAAA?mimetype=image/png",
                            Model = "R8",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 3
                        },
                        new
                        {
                            CarId = 17,
                            Brand = "Nissan",
                            Description = "Car description",
                            ImgUrl = "https://www.nissan.se/content/dam/Nissan/nissan_europe/experience_nissan/performance/18tdieu-helios317.jpg",
                            Model = "GTR",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 3
                        },
                        new
                        {
                            CarId = 5,
                            Brand = "GMC",
                            Description = "Car description",
                            ImgUrl = "https://inv.assets.sincrod.com/RTT/GMC/2023/5959513/default/ext_GAZ_deg02.jpg",
                            Model = "Canyon",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 4
                        },
                        new
                        {
                            CarId = 18,
                            Brand = "Ford",
                            Description = "Car description",
                            ImgUrl = "https://di-uploads-pod14.dealerinspire.com/kingsford/uploads/2020/06/2021-Ford-F-150-left-1.jpg",
                            Model = "F-150",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 4
                        },
                        new
                        {
                            CarId = 19,
                            Brand = "Chevrolet",
                            Description = "Car description",
                            ImgUrl = "https://www.hsv.com.au/images/see/silverado/Silverado-2500HD-LTZ-Midnight-Edition-Black.jpg",
                            Model = "Silverado",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 4
                        },
                        new
                        {
                            CarId = 20,
                            Brand = "RAM",
                            Description = "Car description",
                            ImgUrl = "https://aeceurope.com/wp-content/uploads/2022/07/ram_trx_flame_red_x_black.jpg",
                            Model = "1500",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 4
                        },
                        new
                        {
                            CarId = 21,
                            Brand = "Toyota ",
                            Description = "Car description",
                            ImgUrl = "https://www.toyotaofnewbern.com/assets/stock/colormatched_01/transparent/1280/cc_2023tot09_01_1280/cc_2023tot090074_01_1280_040.png?bg-color=FFFFFF",
                            Model = "Tacoma",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 4
                        },
                        new
                        {
                            CarId = 6,
                            Brand = "Kia",
                            Description = "Car description",
                            ImgUrl = "https://di-uploads-pod12.dealerinspire.com/beavertonkiaredesign/uploads/2019/04/white-kia-sedona-cc0998a8.jpg",
                            Model = "Sedona",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 5
                        },
                        new
                        {
                            CarId = 22,
                            Brand = "Chrysler",
                            Description = "Car description",
                            ImgUrl = "https://medias.fcacanada.ca/jellies/renditions/2023/800x510/CC23_RUCS53_2DS_PAU_APA_XXX_XXX_XXX.ec6a769ba13c51aaf9074a442629fe4c.png",
                            Model = "Pacifica",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 5
                        },
                        new
                        {
                            CarId = 23,
                            Brand = "Honda",
                            Description = "Car description",
                            ImgUrl = "https://www.honda.ca/-/media/Brands/Honda/Models/ODYSSEY/2023/Overview/03_Key-Features/desktop/Honda_Odyssey_key-features_desktop_1036x520.png?h=520&iar=0&w=1036&rev=fb3f14bd71a94de697e91e783024600a&hash=33043FE0D7B4FD01D4C775BD095CFEED",
                            Model = "Odyssey",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 5
                        },
                        new
                        {
                            CarId = 24,
                            Brand = "Toyota",
                            Description = "Car description",
                            ImgUrl = "https://di-uploads-pod28.dealerinspire.com/colonialtoyota/uploads/2021/11/2022-Toyota-Sienna-LE-.jpg",
                            Model = "Sienna",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 5
                        },
                        new
                        {
                            CarId = 25,
                            Brand = "Dodge ",
                            Description = "Car description",
                            ImgUrl = "https://images.hgmsites.net/lrg/2010-dodge-grand-caravan-4-door-wagon-sxt-angular-front-exterior-view_100252340_l.jpg",
                            Model = "Grand Caravan",
                            PlateNumber = "abc123",
                            VehicleCategoryId = 5
                        });
                });

            modelBuilder.Entity("DataAccess.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DriverLicenceNr")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "123 Main St",
                            City = "Anytown",
                            DriverLicenceNr = 123456789,
                            Email = "johndoe@gmail.com",
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "456 Maple Ave",
                            City = "Othertown",
                            DriverLicenceNr = 987654321,
                            Email = "janedoe@gmail.com",
                            FirstName = "Jane",
                            LastName = "Doe"
                        },
                        new
                        {
                            CustomerId = 3,
                            Address = "789 Oak St",
                            City = "Somewhere",
                            DriverLicenceNr = 456123789,
                            Email = "bobsmith@gmail.com",
                            FirstName = "Bob",
                            LastName = "Smith"
                        },
                        new
                        {
                            CustomerId = 4,
                            Address = "456 Elm St",
                            City = "Anywhere",
                            DriverLicenceNr = 789123456,
                            Email = "alicejones@gmail.com",
                            FirstName = "Alice",
                            LastName = "Jones"
                        },
                        new
                        {
                            CustomerId = 5,
                            Address = "789 Pine St",
                            City = "Nowhere",
                            DriverLicenceNr = 123789456,
                            Email = "michaeljohnson@gmail.com",
                            FirstName = "Michael",
                            LastName = "Johnson"
                        },
                        new
                        {
                            CustomerId = 6,
                            Address = "123 Cedar St",
                            City = "Someplace",
                            DriverLicenceNr = 987654321,
                            Email = "emilydavis@gmail.com",
                            FirstName = "Emily",
                            LastName = "Davis"
                        },
                        new
                        {
                            CustomerId = 7,
                            Address = "456 Oak St",
                            City = "Anywhere",
                            DriverLicenceNr = 654321789,
                            Email = "davidbrown@gmail.com",
                            FirstName = "David",
                            LastName = "Brown"
                        },
                        new
                        {
                            CustomerId = 8,
                            Address = "789 Cedar St",
                            City = "Somewhere",
                            DriverLicenceNr = 321456987,
                            Email = "oliviamiller@gmail.com",
                            FirstName = "Olivia",
                            LastName = "Miller"
                        },
                        new
                        {
                            CustomerId = 9,
                            Address = "123 Pine St",
                            City = "Nowhere",
                            DriverLicenceNr = 789456123,
                            Email = "jameswilson@gmail.com",
                            FirstName = "James",
                            LastName = "Wilson"
                        },
                        new
                        {
                            CustomerId = 10,
                            Address = "456 Elm St",
                            City = "Someplace",
                            DriverLicenceNr = 654789321,
                            Email = "sophiamoore@gmail.com",
                            FirstName = "Sophia",
                            LastName = "Moore"
                        },
                        new
                        {
                            CustomerId = 11,
                            Address = "789 Cedar St",
                            City = "Anywhere",
                            DriverLicenceNr = 123456789,
                            Email = "williamtaylor@gmail.com",
                            FirstName = "William",
                            LastName = "Taylor"
                        },
                        new
                        {
                            CustomerId = 12,
                            Address = "123 Oak St",
                            City = "Somewhere",
                            DriverLicenceNr = 321789456,
                            Email = "emmaanderson@gmail.com",
                            FirstName = "Emma",
                            LastName = "Anderson"
                        },
                        new
                        {
                            CustomerId = 13,
                            Address = "456 Pine St",
                            City = "Nowhere",
                            DriverLicenceNr = 987654321,
                            Email = "charlesjohnson@gmail.com",
                            FirstName = "Charles",
                            LastName = "Johnson"
                        },
                        new
                        {
                            CustomerId = 14,
                            Address = "789 Cedar St",
                            City = "Someplace",
                            DriverLicenceNr = 456789123,
                            Email = "avawilson@gmail.com",
                            FirstName = "Ava",
                            LastName = "Wilson"
                        },
                        new
                        {
                            CustomerId = 15,
                            Address = "123 Elm St",
                            City = "Anywhere",
                            DriverLicenceNr = 789123456,
                            Email = "alexandermartin@gmail.com",
                            FirstName = "Alexander",
                            LastName = "Martin"
                        },
                        new
                        {
                            CustomerId = 16,
                            Address = "456 Cedar St",
                            City = "Somewhere",
                            DriverLicenceNr = 123789456,
                            Email = "miaclark@gmail.com",
                            FirstName = "Mia",
                            LastName = "Clark"
                        });
                });

            modelBuilder.Entity("DataAccess.Models.Rental", b =>
                {
                    b.Property<int>("RentalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentalId"));

                    b.Property<DateTime>("BookingMade")
                        .HasColumnType("datetime2");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PickUpDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ReadyForPickUp")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("RentalId");

                    b.ToTable("Rentals");

                    b.HasData(
                        new
                        {
                            RentalId = 1,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2066),
                            CarId = 1,
                            CustomerId = 1,
                            PickUpDate = new DateTime(2023, 4, 19, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2111),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 4, 23, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2114),
                            TotalPrice = 245.0
                        },
                        new
                        {
                            RentalId = 2,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2118),
                            CarId = 2,
                            CustomerId = 2,
                            PickUpDate = new DateTime(2023, 4, 20, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2120),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 4, 24, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2121),
                            TotalPrice = 354.0
                        },
                        new
                        {
                            RentalId = 3,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2124),
                            CarId = 3,
                            CustomerId = 3,
                            PickUpDate = new DateTime(2023, 4, 21, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2126),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 4, 25, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2128),
                            TotalPrice = 483.0
                        },
                        new
                        {
                            RentalId = 4,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2130),
                            CarId = 1,
                            CustomerId = 1,
                            PickUpDate = new DateTime(2023, 7, 27, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2132),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 7, 28, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2133),
                            TotalPrice = 483.0
                        },
                        new
                        {
                            RentalId = 5,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2135),
                            CarId = 2,
                            CustomerId = 2,
                            PickUpDate = new DateTime(2023, 11, 4, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2137),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 11, 5, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2139),
                            TotalPrice = 483.0
                        },
                        new
                        {
                            RentalId = 6,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2141),
                            CarId = 3,
                            CustomerId = 3,
                            PickUpDate = new DateTime(2023, 4, 22, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2142),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 4, 26, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2144),
                            TotalPrice = 531.0
                        },
                        new
                        {
                            RentalId = 7,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2146),
                            CarId = 4,
                            CustomerId = 4,
                            PickUpDate = new DateTime(2023, 4, 23, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2148),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 4, 27, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2150),
                            TotalPrice = 608.0
                        },
                        new
                        {
                            RentalId = 8,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2152),
                            CarId = 5,
                            CustomerId = 5,
                            PickUpDate = new DateTime(2023, 4, 24, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2154),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 4, 28, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2155),
                            TotalPrice = 704.0
                        },
                        new
                        {
                            RentalId = 9,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2157),
                            CarId = 6,
                            CustomerId = 6,
                            PickUpDate = new DateTime(2023, 4, 25, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2159),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 4, 29, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2161),
                            TotalPrice = 846.0
                        },
                        new
                        {
                            RentalId = 10,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2163),
                            CarId = 7,
                            CustomerId = 7,
                            PickUpDate = new DateTime(2023, 4, 26, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2164),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 4, 30, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2166),
                            TotalPrice = 923.0
                        },
                        new
                        {
                            RentalId = 11,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2168),
                            CarId = 8,
                            CustomerId = 8,
                            PickUpDate = new DateTime(2023, 4, 27, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2170),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 5, 1, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2172),
                            TotalPrice = 1020.0
                        },
                        new
                        {
                            RentalId = 12,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2174),
                            CarId = 9,
                            CustomerId = 9,
                            PickUpDate = new DateTime(2023, 4, 28, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2175),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 5, 2, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2177),
                            TotalPrice = 1162.0
                        },
                        new
                        {
                            RentalId = 13,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2179),
                            CarId = 10,
                            CustomerId = 10,
                            PickUpDate = new DateTime(2023, 4, 29, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2181),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 5, 3, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2182),
                            TotalPrice = 1239.0
                        },
                        new
                        {
                            RentalId = 14,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2184),
                            CarId = 11,
                            CustomerId = 11,
                            PickUpDate = new DateTime(2023, 4, 30, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2186),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 5, 4, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2188),
                            TotalPrice = 1381.0
                        },
                        new
                        {
                            RentalId = 15,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2190),
                            CarId = 12,
                            CustomerId = 12,
                            PickUpDate = new DateTime(2023, 5, 1, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2191),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 5, 5, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2193),
                            TotalPrice = 1484.0
                        },
                        new
                        {
                            RentalId = 16,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2195),
                            CarId = 13,
                            CustomerId = 13,
                            PickUpDate = new DateTime(2023, 5, 2, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2197),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 5, 6, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2198),
                            TotalPrice = 1626.0
                        },
                        new
                        {
                            RentalId = 17,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2200),
                            CarId = 14,
                            CustomerId = 14,
                            PickUpDate = new DateTime(2023, 5, 3, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2202),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 5, 7, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2204),
                            TotalPrice = 1852.0
                        },
                        new
                        {
                            RentalId = 18,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2206),
                            CarId = 15,
                            CustomerId = 15,
                            PickUpDate = new DateTime(2023, 5, 4, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2208),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 5, 8, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2209),
                            TotalPrice = 2019.0
                        },
                        new
                        {
                            RentalId = 19,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2211),
                            CarId = 16,
                            CustomerId = 16,
                            PickUpDate = new DateTime(2023, 5, 5, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2213),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 5, 9, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2215),
                            TotalPrice = 2186.0
                        },
                        new
                        {
                            RentalId = 20,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2217),
                            CarId = 1,
                            CustomerId = 2,
                            PickUpDate = new DateTime(2023, 5, 6, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2218),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 5, 10, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2220),
                            TotalPrice = 189.0
                        },
                        new
                        {
                            RentalId = 21,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2222),
                            CarId = 2,
                            CustomerId = 3,
                            PickUpDate = new DateTime(2023, 5, 7, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2224),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 5, 11, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2225),
                            TotalPrice = 327.0
                        },
                        new
                        {
                            RentalId = 22,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2227),
                            CarId = 3,
                            CustomerId = 4,
                            PickUpDate = new DateTime(2023, 5, 8, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2229),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 5, 12, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2231),
                            TotalPrice = 453.0
                        },
                        new
                        {
                            RentalId = 23,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2233),
                            CarId = 4,
                            CustomerId = 5,
                            PickUpDate = new DateTime(2023, 5, 9, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2235),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 5, 13, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2236),
                            TotalPrice = 571.0
                        },
                        new
                        {
                            RentalId = 24,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2238),
                            CarId = 5,
                            CustomerId = 6,
                            PickUpDate = new DateTime(2023, 5, 10, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2240),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 5, 14, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2241),
                            TotalPrice = 708.0
                        },
                        new
                        {
                            RentalId = 25,
                            BookingMade = new DateTime(2023, 4, 18, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2243),
                            CarId = 6,
                            CustomerId = 7,
                            PickUpDate = new DateTime(2023, 5, 11, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2245),
                            ReadyForPickUp = false,
                            ReturnDate = new DateTime(2023, 5, 15, 12, 40, 1, 330, DateTimeKind.Local).AddTicks(2247),
                            TotalPrice = 835.0
                        });
                });

            modelBuilder.Entity("DataAccess.Models.VehicleCategory", b =>
                {
                    b.Property<int>("VehicleCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleCategoryId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PricePerDay")
                        .HasColumnType("float");

                    b.HasKey("VehicleCategoryId");

                    b.ToTable("VehicleCategories");

                    b.HasData(
                        new
                        {
                            VehicleCategoryId = 1,
                            Description = "desc",
                            Name = "SUV",
                            PricePerDay = 5000.0
                        },
                        new
                        {
                            VehicleCategoryId = 2,
                            Description = "desc",
                            Name = "Sedan",
                            PricePerDay = 5000.0
                        },
                        new
                        {
                            VehicleCategoryId = 3,
                            Description = "desc",
                            Name = "Sport",
                            PricePerDay = 5000.0
                        },
                        new
                        {
                            VehicleCategoryId = 4,
                            Description = "desc",
                            Name = "Pickup Truck",
                            PricePerDay = 5000.0
                        },
                        new
                        {
                            VehicleCategoryId = 5,
                            Description = "desc",
                            Name = "Minivan",
                            PricePerDay = 5000.0
                        });
                });

            modelBuilder.Entity("DataAccess.Models.Car", b =>
                {
                    b.HasOne("DataAccess.Models.VehicleCategory", null)
                        .WithMany("Cars")
                        .HasForeignKey("VehicleCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccess.Models.VehicleCategory", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
